openapi: 3.0.1
info:
  title: Topsort Reference Catalog API
  contact:
    email: ralonso@topsort.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
  description: Integration for Marketplaces' catalog queries

servers:
  - url: https://{marketplaceDomain}
    variables:
      marketplaceDomain:
        default: demo.topsort.com/topsort/api
        description: A URL that points to your catalog service

tags:
  - name: Catalog
    description: Integration for Marketplaces' catalog queries.

security:
  - BearerAuth: []

paths:
  /:
    get:
      tags:
        - Catalog
      operationId: healthCheck
      security: [] # No security
      summary: Health Check
      responses:
        200:
          description: The service is up and ready to accept requests.

  /products:
    post:
      tags:
        - Catalog
      summary: Retrieves products by IDs
      operationId: getProductsByID
      requestBody:
        description: An array of product IDs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductsByIDRequest'
        required: true
      responses:
        200:
          description: Returns the products' details, if available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /products/search:
    get:
      tags:
        - Catalog
      summary: Searches products
      operationId: searchProducts
      parameters:
        - in: query
          name: search
          schema:
            type: string
          example: delirium tremens
          description: >
            The search string provided by the user. When a blank string is provided, 
            the string should match all products (e.g. all products with a given category ID).
          required: true
        - in: query
          name: vendorID
          schema:
            type: string
          example: '9SiwYqqL8vdG'
          description: >
            Vendor unique identifier. This identifier is given by the marketplace and allows this service
            to match the vendor with the proper products.
          required: false
        - in: query
          name: categoryID
          schema:
            type: string
          example: ahEDqV5uhjj8
          description: Only retrieve products whose category matches the provided ID.
        - in: query
          name: prev
          schema:
            type: string
          example: wJLZ4TCNZtEW
          description: >
            The passed string identifying the previous page, relative to the requested page.
            When provided, will get the products (ordered by search relevance) of that page.
        - in: query
          name: next
          schema:
            type: string
          description: >
            The passed string identifying the next page, relative to the requested page.
            When provided, will get the products (ordered by search relevance) of that page.
      responses:
        200:
          description: Returns products' details for the provided search terms if available, separated in pages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No products found.

  /categories:
    get:
      tags:
        - Catalog
      summary: Retrieves categories
      operationId: getCategories
      parameters:
        - in: query
          name: prev
          schema:
            type: string
          description: >
            The passed string identifying the previous page, relative to the requested page.
            When provided, will get the products (ordered alphabetically) of that page.
        - in: query
          name: next
          schema:
            type: string
          description: >
            The passed string identifying the next page, relative to the requested page.
            When provided, will get the categories (ordered alphabetically) of that page.
      responses:
        200:
          description: Returns a complete list of categories, separated in pages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoriesResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No categories found.

  /vendors:
    get:
      tags:
        - Catalog
      summary: Retrieves vendors
      operationId: getVendors
      parameters:
        - in: query
          name: prev
          schema:
            type: string
          description: >
            The passed string identifying the previous page, relative to the requested page.
            When provided, will get the vendors (ordered alphabetically) which come after this vendor.
        - in: query
          name: next
          schema:
            type: string
          description: >
            The passed string identifying the next page, relative to the requested page.
            When provided, will get the vendors (ordered alphabetically) which come before this vendor.
      responses:
        200:
          description: Returns a complete list of vendors, separated in pages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No vendors found.

components:
  responses:
    UnauthorizedError:
      description: Credentials are missing or invalid.

  schemas:
    GetProductsByIDRequest:
      type: array
      items:
        type: string
      minItems: 0
      maxItems: 50
      example:
        - eyGqR4YQgBJa
        - KHqzavLNS25n
        - wJLZ4TCNZtEW

    PaginatedResponse:
      type: object
      properties:
        next:
          description: Token to be passed in the `next` call to this request to receive the next page. It must not contain spaces.
          type: string
          example: asTpl1k746
        prev:
          description: Token to be passed in the `prev` call to this request to receive the previous page. It must not contain spaces.
          type: string
          example: yIhohZwFbx

    Product:
      type: object
      description: A Product represents a product listed in a marketplace.
      properties:
        id:
          description: The product ID.
          type: string
          example: eyGqR4YQgBJa
          readOnly: true
        name:
          description: The product name.
          type: string
          example: Delirium Tremens Beer Bottle 330cc x6
        description:
          description: The product description.
          type: string
          example: Named as \"Best Beer in the World\" in 2008 at the World Beer Championships in Chicago, Illinois.
        vendorID:
          description: The vendor ID.
          type: string
          example: 9SiwYqqL8vdG
        vendorName:
          description: The vendor name.
          type: string
          example: Huyghe Brewery
        stock:
          description: How many items of this product you have available. If this number is greater than 0, it means you have it in stock and you can fulfill a purchase.
          type: number
          minimum: 0
          example: 126
        price:
          description: The product price in the minimum currency unit (e.g. cents if applicable). Refer to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) to check how many decimals are used in your currency.
          type: number
          minimum: 1
          example: 14900
        imageURL:
          description: The product image URL. Its size should be between 250x250 and 600x600 pixels.
          type: string
          format: uri
          example: https://r.btcdn.co/r/eyJzaG9wX2lkIjozMzU4LCJnIjoiMjYweCJ9/1759e16e6314a24/669830-Cerveza_Delirium_Tremens_Botella_330cc_x6.png
        brandID:
          description: The brand id.
          type: string
          example: N8G6bGjS1YfF
        brandName:
          description: The brand name.
          type: string
          example: Delirium Tremens
        categoryID:
          description: The category id.
          type: string
          example: ahEDqV5uhjj8
        categoryName:
          description: The category name.
          type: string
          example: Beers/Belgian
      required:
        - id

    ProductsResponse:
      type: object
      required:
        - response
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/Product'

    PaginatedProductsResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - $ref: '#/components/schemas/ProductsResponse'

    Category:
      type: object
      properties:
        id:
          description: >
            The category ID. If there is no ID for categories in the marketplace, this
            can be the category name as long as it is unique.
          type: string
          example: ahEDqV5uhjj8
        name:
          description: The category name.
          type: string
          example: Beers/Belgian
      required:
        - id
        - name

    CategoriesResponse:
      type: object
      required:
        - response
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          minItems: 0
          maxItems: 50
          example:
            - id: ahEDqV5uhjj8
              name: Beers/Belgian
            - id: cJfoUUzG6GOy
              name: Beers/Ales/Amber
            - id: oTcnv0fJCRiL
              name: Beers/Lagers/Bocks
            - id: JspphvZBzV09
              name: Beers/Lagers/Blonde

    PaginatedCategoriesResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - $ref: '#/components/schemas/CategoriesResponse'

    Vendor:
      type: object
      properties:
        id:
          description: The vendor ID.
          type: string
          example: 9SiwYqqL8vdG
        name:
          description: The vendor name.
          type: string
          example: Huyghe Brewery
        logoURL:
          description: The vendor logo. Its size should ideally be between 100x100 and 600x600 pixels.
          type: string
          format: uri
          example: https://r.btcdn.co/r/eyJzaG9wX2lkIjozMzU4LCJnIjoiMjYweCJ9/1759e16e6314a24/669830-Cerveza_Delirium_Tremens_Botella_330cc_x6.png
      required:
        - id
        - name

    VendorsResponse:
      type: object
      required:
        - response
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
          minItems: 0
          maxItems: 50
          example:
            - id: C0n7J6j0WySR
              name: Black Neck Brewery
              logoURL: https://www.cuellonegro.cl/wp-content/uploads/2017/05/logo_web.png
            - id: y7v6kSGGUUFn
              name: Brewery Chile SA
            - id: vhvg6ioBj5fk
              name: Coda Brewery
            - id: IMwMGVfSsEpQ
              name: Kunstmann Brewery
            - id: zo8UXchnFWZu
              name: United Brewery
            - id: 9SiwYqqL8vdG
              name: Huyghe Brewery
              logoURL: https://media-exp1.licdn.com/dms/image/C4E0BAQFE4e-wq7TlCw/company-logo_200_200/0/1519861983671?e=2159024400&v=beta&t=ZoishDxg4-kKH9fJBXRkBc_N0adqUpBmGqdB1TM5sYg

    PaginatedVendorsResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - $ref: '#/components/schemas/VendorsResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
