openapi: 3.0.1
info:
  title: Topsort Endpoints API Reference
  contact:
    email: wicha@topsort.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: https://assets.website-files.com/61a717c57f45d64e5e24eebf/61ee6ccc3f6a684756ef6dec_logo.svg
    backgroundColor: '#fff'
    altText: Topsort
  version: 2.0.0

servers:
  - url: https://<slug>.api.sandbox.topsort.ai/v2
    description: Sandbox server (uses test data)
  - url: https://<slug>.api.topsort.ai//v2
    description: Production server (uses live data)

tags:
  - name: Auctions
    description: An auction determines which products should be promoted based on the vendors' bids.
  - name: Models
    x-displayName: All Models
    description: |
      ## Auction
      <SchemaDefinition schemaRef="#/components/schemas/Auction" />

      ## Auction Request
      <SchemaDefinition schemaRef="#/components/schemas/AuctionRequest" />

      ## Auction Request (Base)
      <SchemaDefinition schemaRef="#/components/schemas/AuctionRequestBase" />

      ## Auction Request (Banners)
      <SchemaDefinition schemaRef="#/components/schemas/AuctionRequestBanners" />

      ## Auction Request (Sponsored Listings)
      <SchemaDefinition schemaRef="#/components/schemas/AuctionRequestSponsoredListings" />

      ## Category
      <SchemaDefinition schemaRef="#/components/schemas/Category" />

      ## Geotargeting
      <SchemaDefinition schemaRef="#/components/schemas/GeoTargeting" />

      ## Product
      <SchemaDefinition schemaRef="#/components/schemas/Product" />

      ## Topsort Error
      <SchemaDefinition schemaRef="#/components/schemas/TopsortError" />

      ## Winner
      <SchemaDefinition schemaRef="#/components/schemas/Winner" />

security:
  - BearerAuth: []

paths:
  /auctions:
    post:
      tags:
        - Auctions
      summary: Creates a new auction
      operationId: createAuction
      requestBody:
        description: >
          The information describing what will be auctioned.
          Topsort will run an auction for each batched auction request, for which products, brands and/or vendors' bids will compete against each other.
          Provided fields are additive, in the sense that only bids that match all filtering fields are considered (e.g. in the example below, only bids for products in the c_yogurt category that match the "Noosa Peach" search string will participate in the acution).
        content:
          application/json:
            schema:
              type: object
              properties:
                auctions:
                  type: array
                  items:
                    $ref: '#/components/schemas/AuctionRequest'
                  minItems: 1
                  maxItems: 10
              required:
                - auctions
        required: true
      responses:
        201:
          description: >
            The auction results.
            The list of winners will contain at most `slots` entries per auction.
            It may contain fewer or no entries at all if there aren't enough products with usable bids, that is,
            a bid amount greater than the reserve price and belonging to a campaign with enough remaining budget.
            Bids become unusable if campaign budget is exhausted, the bid is disqualified to preserve spend pacing, etc.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Auction'
                    minItems: 1
                    maxItems: 10
                required:
                  - results
                example:
                  results:
                    - winners:
                        - rank: 0
                          winnerType: product
                          winnerId: b_Mfk15
                          resolvedBidId: WyJiX01mazE1IiwiMTJhNTU4MjgtOGVhZC00Mjk5LTgzMjctY2ViYjAwMmEwZmE4IiwibGlzdGluZ3MiLCJkZWZhdWx0IiwiIl0=
                        - rank: 1
                          winnerType: product
                          winnerId: e_PJbnN
                          resolvedBidId: WyJlX1BKYm5OIiwiMTJhNTU4MjgtOGVhZC00Mjk5LTgzMjctY2ViYjAwMmEwZmE4IiwibGlzdGluZ3MiLCJkZWZhdWx0IiwiIl0=
                    - winners:
                        - rank: 0
                          winnerType: product
                          winnerId: e_PJbnN
                          resolvedBidId: WyJlX1BKYm5OIiwiMTJhNTU4MjgtOGVhZC00Mjk5LTgzMjctY2ViYjAwMmEwZmE4IiwiYmFubmVyQWRzIiwiZGVmYXVsdCIsIiJd
                          assetUrl: https://topsort.cdnprovider.com/lhs-banner-image-for-e_PJbnN.png
        401:
          $ref: '#/components/responses/UnauthorizedError'
        400:
          $ref: '#/components/responses/BadRequest'

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequest:
      description: HTTP status codes as registered with IANA.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopsortError'

  schemas:
    AuctionRequestBase:
      type: object
      required:
        - type
        - slots
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          enum:
            - listings
            - banners
          description: Discriminator for the type of auction.
        slots:
          type: integer
          format: int32
          minimum: 1
          description: Specifies the maximum number of auction winners that should be returned.

    Category:
      type: object
      description: An object describing the category of the bids that will participate in an auction.
      required:
        - id
      properties:
        id:
          type: string
          example: c_yogurt

    GeoTargeting:
      type: object
      description: An object describing geographical information associated with this auction.
      required:
        - location
      properties:
        location:
          type: string

    AuctionRequestSponsoredListings:
      # TODO: add back searchQuery when supported
      description: >
        Describes the intent of running a sponsored listings auction.
        At least one of the following fields must be set: category,
        products.
      allOf:
        - $ref: '#/components/schemas/AuctionRequestBase'
        - type: object
          properties:
            # category:
            #   $ref: '#/components/schemas/Category'
            # searchQuery:
            #   type: string
            #   description: The search string provided by a user.
            products:
              type: array
              description: An array of objects, each describing a product that should participate in the auction.
              items:
                $ref: '#/components/schemas/Product'
            geoTargeting:
              $ref: '#/components/schemas/GeoTargeting'
      example:
        type: listings
        slots: 2
        # category:
        #   id: c_yogurt
        # searchQuery: Noosa Peach
        geoTargeting:
          location: New York

    AuctionRequestBanners:
      type: object
      description: Describes the intent of running a banner ads auction.
      allOf:
        - $ref: '#/components/schemas/AuctionRequestBase'
        - type: object
          properties:
            category:
              $ref: '#/components/schemas/Category'
            # searchQuery:
            #   type: string
            #   description: The search string provided by a user.
            aspectRatio:
              type: string
              pattern: '^\d+:\d+$'
              description: >
                The aspect ratio for a specific slot for a banner placement in the marketplace app.
                The aspect ratio for the category (or home page, if no category ID was provided in the request) must have been previously set up in the Topsort app.
          required:
            - aspectRatio
      example:
        type: banners
        slots: 1
        aspectRatio: '4:1'
        category:
          id: c_yogurt
        # searchQuery: Noosa Peach

    AuctionRequest:
      description: Describes the intent of running a single auction.
      oneOf:
        - $ref: '#/components/schemas/AuctionRequestSponsoredListings'
        - $ref: '#/components/schemas/AuctionRequestBanners'
      discriminator:
        propertyName: type
        mapping:
          listings: '#/components/schemas/AuctionRequestSponsoredListings'
          banners: '#/components/schemas/AuctionRequestBanners'

    Auction:
      type: object
      properties:
        winners:
          type: array
          items:
            $ref: '#/components/schemas/Winner'
          description:
            'Array of winner objects in order from highest to lowest bid.
            May be empty if there were no qualifying bids.'
      required:
        - winners

    Winner:
      type: object
      required:
        - rank
        - type
        - id
        - resolvedBidId
      properties:
        rank:
          type: integer
          format: int32
          description: "Where the product's bid ranked in the auction.
            Zero-based, so the product with rank 0 won the auction and had the highest bid.
            In an auction response, the winners array is sorted so rank will match the entry's index"
          minimum: 0
        type:
          type: string
          description: The type of the winning bid.
          enum:
            - product
            - vendor
        id:
          type: string
          description: The marketplace's ID of the winning entity, depending on the campaign.
          example: b_Mfk15
        resolvedBidId:
          type: string
          description: An opaque Topsort ID to be used when this item is interacted with.
          example: WyJiX01mazE1IiwiMTJhNTU4MjgtOGVhZC00Mjk5LTgzMjctY2ViYjAwMmEwZmE4IiwibGlzdGluZ3MiLCJkZWZhdWx0IiwiIl0=
        assetUrl:
          type: string
          format: uri
          description: >
            The vendor defined asset that the marketplace has to use as a banner.
            The asset will be served by Topsort's CDN.

    Product:
      required:
        - productId
      type: object
      properties:
        productId:
          type: string
          format: string
          example: p_SA0238

    TopsortError:
      type: object
      required:
        - errCode
      properties:
        errCode:
          type: string
          enum:
            - bad_request
            - internal_server_error
            - invalid_api_key
            - invalid_auction_id
            - invalid_event_type
            - invalid_promotion_type
            - invalid_session
            - missing_placement
            - missing_product_id
            - missing_promotion_type
            - missing_purchased_at
            - missing_session
            - missing_slots
            - no_products
            - no_purchase_items
            - too_few_impressions
            - too_few_slots
        docUrl:
          enum: ['https://topsort-api.redoc.ly']
        message:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
